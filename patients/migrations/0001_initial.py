# Generated by Django 5.0.3 on 2024-06-06 00:02

import django.db.models.deletion
import django_jalali.db.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PatientCase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='Created At')),
                ('modified_at', models.DateField(auto_now=True, verbose_name='Modified At')),
                ('case_number', models.CharField(blank=True, max_length=255, verbose_name='Case Number')),
                ('refer_date', django_jalali.db.models.jDateField(blank=True, null=True, verbose_name='Refer Date')),
                ('case_completion_date', django_jalali.db.models.jDateField(blank=True, null=True, verbose_name='Case Completion Date')),
                ('first_name', models.CharField(max_length=255, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=255, verbose_name='Last Name')),
                ('father_name', models.CharField(max_length=255, verbose_name='Father Name')),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10, verbose_name='Gender')),
                ('birthdate', django_jalali.db.models.jDateField(verbose_name='Birthdate')),
                ('national_code', models.CharField(max_length=10, verbose_name='National Code')),
                ('nationality', models.CharField(choices=[('iranian', 'Iranian'), ('other', 'Other')], max_length=10, verbose_name='Nationality')),
                ('guardian_status', models.CharField(choices=[('self', 'Self'), ('other', 'Other')], max_length=10, verbose_name='Guardian Status')),
                ('first_guardian_name', models.CharField(max_length=255, verbose_name='First Guardian Name')),
                ('first_guardian_national_code', models.CharField(blank=True, max_length=10, verbose_name='First Guardian National Code')),
                ('first_guardian_relation', models.CharField(max_length=255, verbose_name='First Guardian Relation')),
                ('second_guardian_name', models.CharField(blank=True, max_length=255, verbose_name='Second Guardian Name')),
                ('second_guardian_national_code', models.CharField(blank=True, max_length=10, verbose_name='Second Guardian National Code')),
                ('second_guardian_relation', models.CharField(blank=True, max_length=255, verbose_name='Second Guardian Relation')),
                ('social_insurance_type', models.CharField(choices=[('health_insurance', 'Health Insurance'), ('social_security', 'Social Security'), ('medical_services', 'Medical Services'), ('armed_forces', 'Armed Forces'), ('other', 'Other'), ('none', 'None')], max_length=255, verbose_name='Social Insurance Type')),
                ('social_insurance_description', models.TextField(blank=True, verbose_name='Social Insurance Description')),
                ('educational_status', models.CharField(choices=[('elementary', 'ابتدایی'), ('middle_school', 'سیکل'), ('high_school_diploma', 'دیپلم'), ('associate_degree', 'فوق دیپلم'), ('bachelors_degree', 'کارشناسی'), ('masters_degree', 'کارشناسی ارشد'), ('doctorate', 'دکتری'), ('none', 'ندارد')], max_length=20, verbose_name='Educational Status')),
                ('has_private_insurance', models.BooleanField(verbose_name='Has Private Insurance')),
                ('private_insurance_name', models.TextField(blank=True, verbose_name='Private Insurance Name')),
                ('private_insurance_number', models.CharField(blank=True, max_length=255, verbose_name='Private Insurance Number')),
                ('marital_status', models.CharField(choices=[('single', 'Single'), ('married', 'Married'), ('temp_married', 'Temp Married'), ('divorced', 'Divorced'), ('widowed', 'Widowed'), ('separated', 'Separated')], max_length=20, verbose_name='Marital Status')),
                ('marital_status_description', models.TextField(blank=True, verbose_name='Marital Status Description')),
                ('housing_status', models.CharField(choices=[('owner', 'مالک'), ('rental', 'استیجاری- اجاره'), ('mortgaged', 'استیجاری - رهن'), ('mortgaged_rental', 'استیجاری - رهن و اجاره'), ('endowment', 'اوقاف'), ('relatives', 'بستگان'), ('janitor', 'سرایدار'), ('other', 'Other')], max_length=20, verbose_name='Housing Status')),
                ('deposit_amount', models.IntegerField(blank=True, null=True, verbose_name='Deposit Amount')),
                ('rent_amount', models.IntegerField(blank=True, null=True, verbose_name='Rent Amount')),
                ('has_job', models.BooleanField(null=True, verbose_name='Has Job')),
                ('job_description', models.TextField(blank=True, verbose_name='Job Description')),
                ('monthly_income', models.IntegerField(verbose_name='Monthly Income')),
                ('subsidy', models.IntegerField(verbose_name='Subsidy')),
                ('family_monthly_expenses', models.IntegerField(verbose_name='Family Monthly Expenses')),
                ('amount_of_installment_or_debt', models.IntegerField(verbose_name='Amount of Installment or Debt')),
                ('repayment_due_date', django_jalali.db.models.jDateField(verbose_name='Repayment Due Date')),
                ('income_expenses_description', models.TextField(blank=True, verbose_name='Income Expenses Description')),
                ('province_of_residence', models.CharField(blank=True, choices=[('alborz', 'Alborz'), ('ardabil', 'Ardabil'), ('bushehr', 'Bushehr'), ('chaharmahal_and_bakhtiari', 'Chaharmahal and Bakhtiari'), ('east_azerbaijan', 'East Azerbaijan'), ('isfahan', 'Isfahan'), ('fars', 'Fars'), ('gilan', 'Gilan'), ('golestan', 'Golestan'), ('hamadan', 'Hamadan'), ('hormozgan', 'Hormozgan'), ('ilam', 'Ilam'), ('kerman', 'Kerman'), ('kermanshah', 'Kermanshah'), ('khuzestan', 'Khuzestan'), ('kohgiluyeh_and_boyer_ahmad', 'Kohgiluyeh and Boyer-Ahmad'), ('kurdistan', 'Kurdistan'), ('lorestan', 'Lorestan'), ('markazi', 'Markazi'), ('mazandaran', 'Mazandaran'), ('north_khorasan', 'North Khorasan'), ('qazvin', 'Qazvin'), ('qom', 'Qom'), ('razavi_khorasan', 'Razavi Khorasan'), ('semnan', 'Semnan'), ('sistan_and_baluchestan', 'Sistan and Baluchestan'), ('south_khorasan', 'South Khorasan'), ('tehran', 'Tehran'), ('west_azerbaijan', 'West Azerbaijan'), ('yazd', 'Yazd'), ('zanjan', 'Zanjan'), ('not_iranian', 'Not Iranian')], max_length=30, verbose_name='Province of Residence')),
                ('city_of_residence', models.CharField(blank=True, max_length=255, verbose_name='City of Residence')),
                ('address', models.TextField(blank=True, verbose_name='Address')),
                ('mobile_number', models.CharField(max_length=20, verbose_name='Mobile Number')),
                ('phone_number', models.CharField(blank=True, max_length=20, verbose_name='Phone Number')),
                ('representor', models.CharField(max_length=255, verbose_name='Representor')),
                ('representor_relation', models.CharField(max_length=255, verbose_name='Representor Relation')),
                ('referrer_name', models.CharField(max_length=255, verbose_name='Referrer Name')),
                ('other_information', models.TextField(blank=True, verbose_name='Other Information')),
                ('patient_problem', models.TextField(blank=True, verbose_name='Patient Problem')),
                ('helper_comment', models.TextField(blank=True, verbose_name='Helper Comment')),
                ('created_by', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Patient Case',
                'verbose_name_plural': 'Patient Cases',
            },
        ),
        migrations.CreateModel(
            name='OtherSupporter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='Created At')),
                ('modified_at', models.DateField(auto_now=True, verbose_name='Modified At')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('support_amount', models.IntegerField(verbose_name='Support Amount')),
                ('support_start', django_jalali.db.models.jDateField(verbose_name='Support Start')),
                ('support_end', django_jalali.db.models.jDateField(verbose_name='Support End')),
                ('other_information', models.TextField(blank=True, verbose_name='Other Information')),
                ('patient_case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patients.patientcase', verbose_name='Patient Case')),
            ],
            options={
                'verbose_name': 'Other Supporter',
                'verbose_name_plural': 'Other Supporters',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='Created At')),
                ('modified_at', models.DateField(auto_now=True, verbose_name='Modified At')),
                ('type', models.CharField(choices=[('birth_certificate', 'شناسنامه'), ('id_card', 'کارت ملی'), ('guardian_id_card', 'کارت ملی سرپرست خانوار'), ('guardian_birth_certificate', 'شناسنامه سرپرست خانوار'), ('job_certificate', 'مدرک شغلی'), ('property_certificate', 'مدرک ملکی'), ('drugs_images', 'تصویر داروها'), ('supplementary_insurance', 'بیمه تکمیلی'), ('insurance_letter', 'معرفی\u200cنامه بیمه'), ('introduction_letter', 'معرفی\u200cنامه'), ('prescription', 'نسخه'), ('pre_invoice', 'پیش فاکتور'), ('case_sheet', 'برگه خلاصه پرونده'), ('doctor_note', 'گواهی پزشک'), ('lab_results', 'نتایج آزمایش\u200cها'), ('radiology', 'عکس\u200cبرداری'), ('statement', 'فرم اظهارنامه'), ('special_medicine_form', 'فرم داروهای تک\u200cنسخه\u200cای')], max_length=30, verbose_name='Type')),
                ('uploaded_file', models.FileField(upload_to='documents/', verbose_name='File')),
                ('patient_case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patients.patientcase', verbose_name='Patient Case')),
            ],
            options={
                'verbose_name': 'Document',
                'verbose_name_plural': 'Documents',
            },
        ),
        migrations.CreateModel(
            name='Relative',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='Created At')),
                ('modified_at', models.DateField(auto_now=True, verbose_name='Modified At')),
                ('first_name', models.CharField(max_length=255, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=255, verbose_name='Last Name')),
                ('relation', models.CharField(max_length=255, verbose_name='Relation')),
                ('year_of_birth', models.IntegerField(verbose_name='Year of Birth')),
                ('marital_status', models.CharField(choices=[('single', 'Single'), ('married', 'Married'), ('temp_married', 'Temp Married'), ('divorced', 'Divorced'), ('widowed', 'Widowed'), ('separated', 'Separated')], max_length=20, verbose_name='Marital Status')),
                ('occupation', models.CharField(max_length=255, verbose_name='Occupation')),
                ('monthly_income', models.IntegerField(verbose_name='Monthly Income')),
                ('health_status', models.CharField(max_length=255, verbose_name='Health Status')),
                ('patient_case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patients.patientcase', verbose_name='Patient Case')),
            ],
            options={
                'verbose_name': 'Relative',
                'verbose_name_plural': 'Relatives',
            },
        ),
    ]
